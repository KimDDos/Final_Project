<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.four.www.user.repository.MemberDAO">

	<select id="selectUserCount" resultType="int">
		select
		count(user_serial_no) from mbr_profile
	</select>

	<insert id="register">
		insert into mbr_profile(user_email,
		user_pwd, user_name, user_nick_name, user_birth_date,
		user_phone_num,
		user_itrs, is_trainer)
		values(
		#{userEmail},
		#{userPwd},
		#{userName},
		#{userNickName},
		#{userBirthDate},
		#{userPhoneNum},
		#{userItrs},
		#{isTrainer})
	</insert>

	<insert id="regUser">
		insert into mbr_user(user_serial_no, user_name,
		user_nick_name, user_login_type)
		values(#{userSerialNo}, #{userName},
		#{userNickName}, #{userLoginType})
	</insert>

	<select id="selectUserInfo"
		resultType="com.four.www.user.domain.UserVO">
		select user_email from mbr_profile where user_email =
		#{userEmail}
	</select>
	
		<select id="userDetailS"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where user_serial_no =
		#{userSerialNo}
	</select>


	<select id="selectUser"
		resultType="com.four.www.user.domain.UserVO">
		select * from mbr_user where User_serial_no =
		#{userSerialNo}
	</select>

	<select id="selectMemberInfo"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where user_email = #{userEmail}
	</select>

	<select id="selectAuths"
		resultType="com.four.www.user.domain.UserAuthVO">
		select * from mbr_auth where user_serial_no =
		#{userSerialNo}
	</select>

	<insert id="authRegister">
		insert into
		mbr_auth(User_serial_no)
		values(#{UserSerialNo})
	</insert>

	<insert id="userRegister">
		insert into
		mbr_user(User_serial_no,User_name,User_nick_name,User_login_type)
		values(#{userSerialNo},#{userName},#{userNickName},"D")
	</insert>

	<select id="getSocialMbr"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where user_email = #{userEmail}
	</select>

	<update id="memberModify">
		update mbr_profile set
		user_name =#{userName},
		user_nick_name =#{userNickName},
		user_phone_num =#{userPhoneNum}
		where
		User_serial_no = #{userSerialNo}
	</update>

	<update id="memberUserVOModify" parameterType="com.four.www.user.domain.MemberVO">
		update mbr_user set
		user_name =#{userName},
		user_nick_name = #{userNickName}
		where
		User_serial_no = #{userSerialNo}
	</update>

	<select id="getUserDetail"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where user_email = #{userEmail}
	</select>

	<select id="getUserDetailS"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where User_serial_no =
		#{userSerialNo}
	</select>

	<delete id="deleteMember">
		delete from mbr_profile where User_serial_no=#{userSerialNo}
	</delete>

	<delete id="deleteMemberAuth">
		delete from mbr_auth where User_serial_no=#{userSerialNo}
	</delete>

	<delete id="deleteMemberUser">
		delete from mbr_user where User_serial_no=#{userSerialNo}
	</delete>

	<select id="updateLoginDate">
		update mbr_profile set user_last_login_date = now()
	</select>

	<select id="getSocoalUser"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile where user_email = #{userEmail}
	</select>

	<select id="getList"
		resultType="com.four.www.user.domain.MemberVO">
		select * from mbr_profile order by User_serial_no desc
	</select>
	
	<select id="isDupleEmail" resultType="int">
		select count(user_email) from mbr_profile where user_email = #{userEmail}
	</select>
</mapper>